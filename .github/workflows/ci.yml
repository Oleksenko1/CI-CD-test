name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest flake8
        pip install -r requirements.txt

    - name: Run linting with flake8
      run: |
        flake8 app/ --count --show-source --statistics

    - name: Run tests with pytest
      run: |
        pytest app/test_main.py -v

  docker-build:
    needs: build-test-lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/my-python-app:latest

  deploy-stage:
    needs: docker-build
    runs-on: ubuntu-latest
    
    steps:
    - name: Simulate deployment to staging
      run: |
        echo "Deploying to staging server..."
        echo "Image: ${{ secrets.DOCKER_HUB_USERNAME }}/my-python-app:latest"
        # Реальний деплой міг би виглядати так:
        # ssh user@staging-server "docker pull image && docker run ..."